// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharedLibrary.Backend.BusinessLogic;
using SharedLibrary.Backend.DataAccess;

#nullable disable

namespace SharedLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241203152345_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.Case", b =>
                {
                    b.Property<int>("CaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CaseID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentID = 4,
                            Name = "IT",
                            Number = 12
                        },
                        new
                        {
                            DepartmentID = 5,
                            Name = "HR",
                            Number = 13
                        },
                        new
                        {
                            DepartmentID = 6,
                            Name = "Support",
                            Number = 14
                        });
                });

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPRNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.TimeRegistration", b =>
                {
                    b.Property<int>("TimeRegistrationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CaseID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("TimeRegistrationID");

                    b.HasIndex("CaseID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("TimeRegistrations");
                });

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.Case", b =>
                {
                    b.HasOne("SharedLibrary.Backend.DataAccess.Department", "Department")
                        .WithMany("Cases")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.Employee", b =>
                {
                    b.HasOne("SharedLibrary.Backend.DataAccess.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.TimeRegistration", b =>
                {
                    b.HasOne("SharedLibrary.Backend.DataAccess.Case", "Case")
                        .WithMany("TimeRegistrations")
                        .HasForeignKey("CaseID");

                    b.HasOne("SharedLibrary.Backend.DataAccess.Employee", "Employee")
                        .WithMany("TimeRegistrations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Case");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.Case", b =>
                {
                    b.Navigation("TimeRegistrations");
                });

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.Department", b =>
                {
                    b.Navigation("Cases");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SharedLibrary.Backend.DataAccess.Employee", b =>
                {
                    b.Navigation("TimeRegistrations");
                });
#pragma warning restore 612, 618
        }
    }
}
